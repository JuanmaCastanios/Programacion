
package Tema7.Ejercicios.Matriz;

import java.util.Random;
import javax.swing.JOptionPane;

/**
 *
 * @author bladiaju
 */
public class AppEjercicio3 extends javax.swing.JFrame {
    int[][] matriz = new int[4][5];
    /**
     * Creates new form AppEjercicio3
     */
    public AppEjercicio3() {
        initComponents();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        resultado = new javax.swing.JTextArea();
        pFilas = new javax.swing.JButton();
        pColumnas = new javax.swing.JButton();
        llenarMatriz = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        array1 = new javax.swing.JTextField();
        array2 = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        resultado.setEditable(false);
        resultado.setColumns(8);
        resultado.setFont(new java.awt.Font("Segoe UI Black", 1, 24)); // NOI18N
        resultado.setRows(5);
        jScrollPane1.setViewportView(resultado);

        pFilas.setText("Permutar Filas");
        pFilas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pFilasActionPerformed(evt);
            }
        });

        pColumnas.setText("Permutar Columnas");
        pColumnas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pColumnasMouseClicked(evt);
            }
        });

        llenarMatriz.setText("Llenar Matriz");
        llenarMatriz.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                llenarMatrizMouseClicked(evt);
            }
        });

        jLabel1.setText("Origen:");

        jLabel2.setText("Destino:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(49, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(pFilas)
                        .addGap(36, 36, 36))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(34, 34, 34)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(pColumnas)
                                        .addGap(22, 22, 22))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(llenarMatriz)
                                        .addGap(43, 43, 43))))
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel2))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(array1)
                                    .addComponent(array2, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)))))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(pFilas)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(pColumnas)
                        .addGap(40, 40, 40)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(array1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(array2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(32, 32, 32)
                        .addComponent(llenarMatriz))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(43, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void pFilasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pFilasActionPerformed
        try {
            permutaFilas(matriz, Integer.parseInt(array1.getText()), Integer.parseInt(array2.getText()));
        } catch (NumberFormatException error1) {
                JOptionPane.showMessageDialog(null, "El formato de dato es incorrecto.","ERROR",2);
        } catch(IndexOutOfBoundsException error2){
            JOptionPane.showMessageDialog(null, "La posición no existe.","ERROR",2);
        }
        imprimirMatriz(matriz);
    }//GEN-LAST:event_pFilasActionPerformed

    private void llenarMatrizMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_llenarMatrizMouseClicked
        rellenarMatriz(matriz);
        imprimirMatriz(matriz);
    }//GEN-LAST:event_llenarMatrizMouseClicked

    private void pColumnasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pColumnasMouseClicked
        try {
            permutaColumnas(matriz, Integer.parseInt(array1.getText()), Integer.parseInt(array2.getText()));
        } catch (NumberFormatException error1) {
            JOptionPane.showMessageDialog(null, "El formato de dato es incorrecto.","ERROR",2);
        } catch(IndexOutOfBoundsException error2){
            JOptionPane.showMessageDialog(null, "La posición no existe.","ERROR",2);
        }
        imprimirMatriz(matriz);
    }//GEN-LAST:event_pColumnasMouseClicked
    public void permutaFilas(int[][] matriz, int fila1, int fila2){
        int[] aux = new int[matriz.length];
        for (int i = 0; i < matriz.length; i++) {

                aux[i] = matriz[fila1][i];
                matriz[fila1][i] = matriz[fila2][i];
                matriz[fila2][i] = aux[i];
        }   
    }
    
    public void permutaColumnas(int[][] matriz, int columna1, int columna2){
        int[] aux = new int[matriz.length];
        for (int i = 0; i < matriz.length; i++) {

                aux[i] = matriz[i][columna1];
                matriz[i][columna1] = matriz[i][columna2];
                matriz[i][columna2] = aux[i];
        }   
    }
    
    public void rellenarMatriz(int[][] matriz){
        Random gen = new Random();
        int filas = matriz.length;
        int columnas = matriz[0].length;
        for (int i = 0; i < filas; i++){
            for (int j = 0; j < columnas; j++){
                matriz[i][j] = gen.nextInt(1,101);
            }
        }
    }
    
    public void imprimirMatriz(int[][] matriz){
        int filas = matriz.length;
        int columnas = matriz[0].length;
        String matrizResultado = "";
        for (int i = 0; i < filas; i++) {
            for (int j = 0; j < columnas; j++) {
                matrizResultado = matrizResultado + matriz[i][j] + " ";
            }
            matrizResultado = matrizResultado + "\n";
        }
        resultado.setText(matrizResultado);
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AppEjercicio3.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AppEjercicio3.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AppEjercicio3.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AppEjercicio3.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AppEjercicio3().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField array1;
    private javax.swing.JTextField array2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton llenarMatriz;
    private javax.swing.JButton pColumnas;
    private javax.swing.JButton pFilas;
    private javax.swing.JTextArea resultado;
    // End of variables declaration//GEN-END:variables
}
